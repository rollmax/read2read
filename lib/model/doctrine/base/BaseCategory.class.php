<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name_en
 * @property string $name_ru
 * @property integer $ordered
 * @property boolean $is_free
 * @property integer $purchase_cnt
 * @property string $page_keywords
 * @property string $page_description
 * @property Doctrine_Collection $Content
 * @property Doctrine_Collection $ContentPurchase
 * @property Doctrine_Collection $Statistics
 * 
 * @method string              getNameEn()           Returns the current record's "name_en" value
 * @method string              getNameRu()           Returns the current record's "name_ru" value
 * @method integer             getOrdered()          Returns the current record's "ordered" value
 * @method boolean             getIsFree()           Returns the current record's "is_free" value
 * @method integer             getPurchaseCnt()      Returns the current record's "purchase_cnt" value
 * @method string              getPageKeywords()     Returns the current record's "page_keywords" value
 * @method string              getPageDescription()  Returns the current record's "page_description" value
 * @method Doctrine_Collection getContent()          Returns the current record's "Content" collection
 * @method Doctrine_Collection getContentPurchase()  Returns the current record's "ContentPurchase" collection
 * @method Doctrine_Collection getStatistics()       Returns the current record's "Statistics" collection
 * @method Category            setNameEn()           Sets the current record's "name_en" value
 * @method Category            setNameRu()           Sets the current record's "name_ru" value
 * @method Category            setOrdered()          Sets the current record's "ordered" value
 * @method Category            setIsFree()           Sets the current record's "is_free" value
 * @method Category            setPurchaseCnt()      Sets the current record's "purchase_cnt" value
 * @method Category            setPageKeywords()     Sets the current record's "page_keywords" value
 * @method Category            setPageDescription()  Sets the current record's "page_description" value
 * @method Category            setContent()          Sets the current record's "Content" collection
 * @method Category            setContentPurchase()  Sets the current record's "ContentPurchase" collection
 * @method Category            setStatistics()       Sets the current record's "Statistics" collection
 * 
 * @package    read2read
 * @subpackage model
 * @author     aSoft4Web Team <info@asoft4web.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('name_en', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('name_ru', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('ordered', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 50,
             ));
        $this->hasColumn('is_free', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('purchase_cnt', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('page_keywords', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('page_description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));

        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Content', array(
             'local' => 'id',
             'foreign' => 'id_category'));

        $this->hasMany('ContentPurchase', array(
             'local' => 'id',
             'foreign' => 'id_category'));

        $this->hasMany('Statistics', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}