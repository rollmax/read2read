<?php

/**
 * BaseUser__Group
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $group_id
 * @property User $User
 * @property UserGroup $Group
 * 
 * @method integer     getUserId()   Returns the current record's "user_id" value
 * @method integer     getGroupId()  Returns the current record's "group_id" value
 * @method User        getUser()     Returns the current record's "User" value
 * @method UserGroup   getGroup()    Returns the current record's "Group" value
 * @method User__Group setUserId()   Sets the current record's "user_id" value
 * @method User__Group setGroupId()  Sets the current record's "group_id" value
 * @method User__Group setUser()     Sets the current record's "User" value
 * @method User__Group setGroup()    Sets the current record's "Group" value
 * 
 * @package    read2read
 * @subpackage model
 * @author     aSoft4Web Team <info@asoft4web.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser__Group extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user__group');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('UserGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}