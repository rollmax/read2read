<?php

/**
 * BaseTopic
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_room
 * @property integer $id_user
 * @property string $title
 * @property Room $Room
 * @property User $User
 * @property Doctrine_Collection $Post
 * 
 * @method integer             getIdRoom()  Returns the current record's "id_room" value
 * @method integer             getIdUser()  Returns the current record's "id_user" value
 * @method string              getTitle()   Returns the current record's "title" value
 * @method Room                getRoom()    Returns the current record's "Room" value
 * @method User                getUser()    Returns the current record's "User" value
 * @method Doctrine_Collection getPost()    Returns the current record's "Post" collection
 * @method Topic               setIdRoom()  Sets the current record's "id_room" value
 * @method Topic               setIdUser()  Sets the current record's "id_user" value
 * @method Topic               setTitle()   Sets the current record's "title" value
 * @method Topic               setRoom()    Sets the current record's "Room" value
 * @method Topic               setUser()    Sets the current record's "User" value
 * @method Topic               setPost()    Sets the current record's "Post" collection
 * 
 * @package    read2read
 * @subpackage model
 * @author     aSoft4Web Team <info@asoft4web.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTopic extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('topic');
        $this->hasColumn('id_room', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('id_user', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));

        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Room', array(
             'local' => 'id_room',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'id_user',
             'foreign' => 'id'));

        $this->hasMany('Post', array(
             'local' => 'id',
             'foreign' => 'id_topic'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}